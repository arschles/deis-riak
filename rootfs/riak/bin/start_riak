#!/bin/sh

RIAK_BACKEND=${RIAK_BACKEND:-bitcask}

IP_ADDRESS=$(ip -o -4 addr list eth0 | awk '{print $4}' | cut -d/ -f1)
CONF_FOLDER=/etc/riak
CONF_FILE="${CONF_FOLDER}/riak.conf"
ADVANCED_CONF_FILE="${CONF_FOLDER}/advanced.conf"

# Ensure correct ownership and permissions on volumes
chown riak:riak /var/lib/riak /var/log/riak
chmod 755 /var/lib/riak /var/log/riak

# Ensure the Erlang node name is set correctly
sed -i.bak "s/riak@127.0.0.1/riak@${IP_ADDRESS}/" $CONF_FILE

# Ensure the desired Riak backend is set correctly
sed -i.bak "s/storage_backend = \(.*\)/storage_backend = ${RIAK_BACKEND}/" $CONF_FILE

if env | grep -q "RIAK_INET_DIST_MIN"; then
  echo "erlang.distribution.port_range.minimum = ${RIAK_INET_DIST_MIN}" >> $CONF_FILE
  echo "erlang.distribution.port_range.maximum = ${RIAK_INET_DIST_MAX}" >> $CONF_FILE
fi

#configuration for Riak CS
sed -i.bak "s/storage_backend = bitcask//" $CONF_FILE
echo "buckets.default.allow_mult = true" >> $CONF_FILE
touch $ADVANCED_CONF_FILE
cat << EOF > $ADVANCED_CONF_FILE
{riak_kv, [
    %% Other configs
    {add_paths, ["/usr/lib/riak-cs/lib/riak_cs-2.1.1/ebin"]},
    {storage_backend, riak_cs_kv_multi_backend},
    {multi_backend_prefix_list, [{<<"0b:">>, be_blocks}]},
    {multi_backend_default, be_default},
    {multi_backend, [
        {be_default, riak_kv_eleveldb_backend, [
            {total_leveldb_mem_percent, 30},
            {data_root, "/var/lib/riak/leveldb"}
        ]},
        {be_blocks, riak_kv_bitcask_backend, [
            {data_root, "/var/lib/riak/bitcask"}
        ]}
    ]},
    %% Other configs
]}
EOF


echo "Starting Riak..."
# Start Riak
"$(ls -d /usr/lib/riak/erts*)/bin/run_erl" "/tmp/riak" "/var/log/riak" "exec /usr/sbin/riak console" &

# wait for riak to come up locally
sleep 5

echo "started"
